on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

name: Test-module

jobs:
  Test-module:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: '4.2.3', rspm: "https://packagemanager.posit.co/cran/latest"}
          #- {os: macOS-latest, r: '4.2.3', rspm: "https://packagemanager.posit.co/cran/latest"}
          #- {os: ubuntu-20.04, r: '4.2.3', rspm: "https://packagemanager.posit.co/cran/latest"}

    env:
      GITHUB_PAT: ${{ secrets.GH_TOKEN }}
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RENV_CONFIG_REPOS_OVERRIDE: ${{ matrix.config.rspm }}
      CDM5_ORACLE_CDM_SCHEMA: ${{ secrets.CDM5_ORACLE_CDM_SCHEMA }}
      CDM5_ORACLE_OHDSI_SCHEMA: ${{ secrets.CDM5_ORACLE_OHDSI_SCHEMA }}
      CDM5_ORACLE_PASSWORD: ${{ secrets.CDM5_ORACLE_PASSWORD }}
      CDM5_ORACLE_SERVER: ${{ secrets.CDM5_ORACLE_SERVER }}
      CDM5_ORACLE_USER: ${{ secrets.CDM5_ORACLE_USER }}
      CDM5_POSTGRESQL_CDM_SCHEMA: ${{ secrets.CDM5_POSTGRESQL_CDM_SCHEMA }}
      CDM5_POSTGRESQL_OHDSI_SCHEMA: ${{ secrets.CDM5_POSTGRESQL_OHDSI_SCHEMA }}
      CDM5_POSTGRESQL_PASSWORD: ${{ secrets.CDM5_POSTGRESQL_PASSWORD }}
      CDM5_POSTGRESQL_SERVER: ${{ secrets.CDM5_POSTGRESQL_SERVER }}
      CDM5_POSTGRESQL_USER: ${{ secrets.CDM5_POSTGRESQL_USER }}
      CDM5_SQL_SERVER_CDM_SCHEMA: ${{ secrets.CDM5_SQL_SERVER_CDM_SCHEMA }}
      CDM5_SQL_SERVER_OHDSI_SCHEMA: ${{ secrets.CDM5_SQL_SERVER_OHDSI_SCHEMA }}
      CDM5_SQL_SERVER_PASSWORD: ${{ secrets.CDM5_SQL_SERVER_PASSWORD }}
      CDM5_SQL_SERVER_SERVER: ${{ secrets.CDM5_SQL_SERVER_SERVER }}
      CDM5_SQL_SERVER_USER: ${{ secrets.CDM5_SQL_SERVER_USER }}
      LIB_XML: "$(MINGW_PREFIX)"

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
      
      - uses: msys2/setup-msys2@v2
      
      - shell: msys2 {0}
        run: |
          pacman -Sy --noconfirm mingw-w64-{i686,x86_64}-glpk mingw-w64-{i686,x86_64}-libxml2 mingw-w64-{i686,x86_64}-gmp

      - name: Install system requirements
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y make
          sudo apt-get install -y default-jdk
          sudo apt-get install -y libcurl4-openssl-dev
          sudo apt-get install -y libssl-dev

      - uses: r-lib/actions/setup-renv@v2
        with:
          cache-version: 4
          
      - name: Run module test script
        run: Rscript tests/testScript.R
